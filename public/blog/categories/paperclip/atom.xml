<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Paperclip | Philip Q Nguyen's blog]]></title>
  <link href="http://blog.ninjacorner.com/blog/categories/paperclip/atom.xml" rel="self"/>
  <link href="http://blog.ninjacorner.com/"/>
  <updated>2014-11-01T21:32:05-07:00</updated>
  <id>http://blog.ninjacorner.com/</id>
  <author>
    <name><![CDATA[Philip Q Nguyen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Paperclip With AWS S3 Demo Running on Rails 4.0.0]]></title>
    <link href="http://blog.ninjacorner.com/blog/2014/10/26/paperclip-with-aws-s3-demo-running-on-rails-4-dot-0-0/"/>
    <updated>2014-10-26T20:43:56-07:00</updated>
    <id>http://blog.ninjacorner.com/blog/2014/10/26/paperclip-with-aws-s3-demo-running-on-rails-4-dot-0-0</id>
    <content type="html"><![CDATA[<p>This is a tutorial and demo to get Paperclip with AWS S3 uploads running on rails 4.0.0. The source code can be found <a href="https://github.com/philipqnguyen/paperclip-example">here</a>. This demo was created as part of the Code Fellows' <a href="https://github.com/uploaders">Uploaders group</a>.</p>

<p>In this tutorial, we will make a simple site where articles can be created and pictures can be upload as part of the articles using the Paperclip gem. <!-- more --></p>

<h2>Step 1 &ndash; Ensure you have all dependencies</h2>

<p>Make sure you have an AWS account with an S3 bucket. Keep your access key and your secret access key handy because we will need it in a few steps.</p>

<p>Ensure that you have ImageMagick installed. If you don&rsquo;t, you can install it via Homebrew with <code>brew install imagemagick</code></p>

<p>If you don&rsquo;t already have Rails 4.0.0, you can get it by typing this in your terminal: <code>gem install rails --version 4.0.0</code></p>

<p>Create a new rails app with <code>rails _4.0.0_ new &lt;appname&gt;</code></p>

<p>In your Gemfile, add:
<code>ruby Gemfile
gem 'paperclip', '~&gt; 4.2'
gem 'aws-sdk', '~&gt; 1.55.0'
</code>
Then run <code>bundle install</code>.</p>

<h2>Step 2 &ndash; Make the articles</h2>

<p>For the purpose of this demo, we will generate an Article scaffold to save some time. <code>rails g scaffold Article title:string body:text</code></p>

<p>Run <code>bundle exec rake db:migrate</code></p>

<p>In your config/routes.rb, add <code>root 'articles#index'</code>.</p>

<h2>Step 3 &ndash; Add Paperclip</h2>

<p>Run <code>rails g paperclip article pic</code> in order to add a the &ldquo;pic&rdquo; column to the Articles table. Then, <code>bundle exec rake db:migrate</code>.</p>

<p>Add the following to the model, Article.rb:
<code>ruby Article.rb
  has_attached_file :pic, :styles =&gt; { :medium =&gt; "300x300&gt;", :thumb =&gt; "100x100&gt;" }, :default_url =&gt; "/images/:style/missing.png"
  validates_attachment_content_type :pic, :content_type =&gt; /\Aimage\/.*\Z/
</code>
That will create two additional versions of each pic that is uploaded, a medium and a thumbnail version. In addition, it will also validate that the file is an image. You can make changes to the sizes or add additional variations if you want.</p>

<p>Add <code>&lt;%= image_tag @article.pic.url(:medium) %&gt;</code> to the article&rsquo;s show page.</p>

<p>Add <code>&lt;%= f.file_field :pic %&gt;</code> in your form and add <code>:html =&gt; { :multipart =&gt; true }</code> to the top of your form so that it looks like this:</p>

<p>``` erb _form.html.erb
&lt;%= form_for(@article, :html => { :multipart => true }) do |f| %>
  &lt;% if @article.errors.any? %></p>

<pre><code>&lt;div id="error_explanation"&gt;
  &lt;h2&gt;&lt;%= pluralize(@article.errors.count, "error") %&gt; prohibited this article from being saved:&lt;/h2&gt;

  &lt;ul&gt;
  &lt;% @article.errors.full_messages.each do |msg| %&gt;
    &lt;li&gt;&lt;%= msg %&gt;&lt;/li&gt;
  &lt;% end %&gt;
  &lt;/ul&gt;
&lt;/div&gt;
</code></pre>

<p>  &lt;% end %></p>

<p>  &lt;%= f.file_field :pic %></p>

<p>  <div class="field"></p>

<pre><code>&lt;%= f.label :title %&gt;&lt;br&gt;
&lt;%= f.text_field :title %&gt;
</code></pre>

<p>  </div>
  <div class="field"></p>

<pre><code>&lt;%= f.label :body %&gt;&lt;br&gt;
&lt;%= f.text_area :body %&gt;
</code></pre>

<p>  </div>
  <div class="actions"></p>

<pre><code>&lt;%= f.submit %&gt;
</code></pre>

<p>  </div>
&lt;% end %>
```</p>

<h2>Step 4 &ndash; Configure Paperclip and try it!</h2>

<p>Add this to your config/environments/development.rb. Also add it to your production.rb if you plan to use this in production.
``` ruby development.rb
  Paperclip.options[:command_path] = &ldquo;/usr/local/bin/&rdquo;</p>

<p>  config.paperclip_defaults = {</p>

<pre><code>:storage =&gt; :s3,
:s3_credentials =&gt; {
  :bucket =&gt; ENV['S3_BUCKET_NAME'],
  :access_key_id =&gt; ENV['AWS_ACCESS_KEY_ID'],
  :secret_access_key =&gt; ENV['AWS_SECRET_ACCESS_KEY']
}
</code></pre>

<p>  }
```
Now you need to add the S3 bucket name, S3 access key and S3 secret access key into your shell profile. If you are on a Mac and using bash, put this into your .bash_profile:</p>

<p><code>ruby .bash_profile
export S3_BUCKET_NAME="&lt;name of your bucket&gt;"
export AWS_ACCESS_KEY_ID="&lt;your key&gt;"
export AWS_SECRET_ACCESS_KEY="&lt;your secret key&gt;"
</code></p>

<p>Launch the server and try it out. If you get an error upon uploading a picture that says: “The bucket you are attempting to access must be addressed using the specified endpoint. Please send all future requests to this endpoint.” You will need to add this <code>:s3_host_name =&gt; 's3-us-west-2.amazonaws.com'</code> into your development.rb and likewise in your production.rb so that it looks like this:</p>

<p>``` ruby development.rb
  Paperclip.options[:command_path] = &ldquo;/usr/local/bin/&rdquo;</p>

<p>  config.paperclip_defaults = {</p>

<pre><code>:storage =&gt; :s3,
:s3_credentials =&gt; {
  :bucket =&gt; ENV['S3_BUCKET_NAME'],
  :s3_host_name =&gt; 's3-us-west-2.amazonaws.com', # this
  :access_key_id =&gt; ENV['AWS_ACCESS_KEY_ID'],
  :secret_access_key =&gt; ENV['AWS_SECRET_ACCESS_KEY']
}
</code></pre>

<p>  }
```</p>

<p>Now it should work. I hope this helps!</p>

<h2>References used in this tutorial</h2>

<p><a href="https://devcenter.heroku.com/articles/paperclip-s3">Heroku</a> has great documentation as well as the original
<a href="https://github.com/thoughtbot/paperclip">Paperclip</a> documentation.</p>
]]></content>
  </entry>
  
</feed>
